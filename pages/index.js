import Head from 'next/head'
import Image from 'next/image'
import { useContext } from 'react'
import { useState } from 'react';
import { ethers } from 'ethers'

import InvoiceData from '../src/artifacts/contracts/Invoice.sol/Invoice.json'
const invoicedataAddress = '0x357b5Dc86F6248e2Bd75233e2B2Ad1FA58C09a06'
import { TransactionContext } from '../context/TransactionContext';

const style = {
  input: `block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none focus:outline-none focus:ring-0 focus:border-black peer`,
  label: `absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6`,
  button: `text-black text-sm font-semibold border px-4 py-2 rounded-lg hover:text-black hover:border-black w-72 mt-4 mx-44`,
}

export default function Home() {

  const {
    setBuyerPAN,
    setSellerPAN,
    setSellerAddress,
    setAmount,
    setDate,
    setPaymentStatus,
    setInvoiceNumber,
    addInvoice,
    currentAccount
  } = useContext(TransactionContext)

  return (
    <div className="">
      <Head>
        <title>Invoices Dapp</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        {currentAccount && <div className="max-w-2xl mx-auto mt-16">
          <p className='text-5xl font-semibold text-center'>Invoices</p>
          <p className='font-semibold text-center mt-2'>Add you invoices to blockchain</p>
          <form className='mt-16'>
            <div className="relative z-0 mb-6 w-full group">
              <input type="text" className={style.input}
                onChange={e => setBuyerPAN(e.target.value)}
                required />
              <label className={style.label}>Buyer Pan:</label>
            </div>
            <div className="relative z-0 mb-6 w-full group">
              <input type="text" className={style.input}
                onChange={e => setSellerPAN(e.target.value)}
                required />
              <label className={style.label}>Seller Pan</label>
            </div>
            <div className="relative z-0 mb-6 w-full group">
              <input type="number" className={style.input}
                onChange={e => setInvoiceNumber(e.target.value)}
                required />
              <label className={style.label}>Invoice Id(number) :</label>
            </div>
            <div className="grid xl:grid-cols-2 xl:gap-6">
              <div className="relative z-0 mb-6 w-full group">
                <input type="number" className={style.input}
                  onChange={e => setAmount(e.target.value)}
                  required />
                <label className={style.label}>Total Amount</label>
              </div>
              <div className="relative z-0 mb-6 w-full group">
                <input type="number" className={style.input}
                  onChange={e => setDate(e.target.value)}
                  placeholder=" " required />
                <label className={style.label}>Date</label>
              </div>
            </div>
            <div className="grid xl:grid-cols-2 xl:gap-6">
              <div className="relative z-0 mb-6 w-full group">
                <input type="bool" className={style.input}
                  onChange={e => setPaymentStatus(e.target.value)}
                  placeholder=" " required />
                <label className={style.label}>Payment Status</label>
              </div>
              <div className="relative z-0 mb-6 w-full group">
                <input type="text" className={style.input}
                  onChange={e => setSellerAddress(e.target.value)}
                  placeholder=" " required />
                <label className={style.label}>Paid to</label>
              </div>
            </div>
            <button type="submit" onClick={e => addInvoice(e)} className={style.button}>Submit</button>
          </form>
        </div>}
        {!currentAccount && <div className='h-screen w-full font-semibold text-5xl flex items-center justify-center'>
          <p>Please Login to Continue</p>
        </div>}
      </div>
    </div>
  )
}
